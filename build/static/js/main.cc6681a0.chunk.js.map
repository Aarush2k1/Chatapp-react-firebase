{"version":3,"sources":["components/Home/styles.js","services/firebase.js","components/Home/Home.js","components/Sidebar/SidebarChat/SidebarChat.js","components/TooltipCustom.js","components/DropdownMenu.js","components/Sidebar/SearchBar.js","components/Sidebar/NewChat.js","components/Sidebar/Sidebar.js","images/whatsapp-connect.jpg","components/Chat/ChatLandingScreen.js","components/Chat/ChatHeader.js","components/Chat/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","icon","marginRight","spacing","navColor","backgroundColor","heroContent","palette","background","paper","padding","heroButtons","marginTop","a","textDecoration","footer","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","GoogleAuthProvider","Album","uiConfig","signInFlow","signInOptions","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","classes","useStyles","Fragment","CssBaseline","AppBar","position","className","Toolbar","WhatsApp","Typography","variant","color","noWrap","Container","maxWidth","component","align","gutterBottom","paragraph","Grid","container","justify","item","Button","href","firebaseAuth","onClick","signInAnonymously","catch","error","alert","SidebarChat","id","name","useState","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","to","Avatar","src","photo","message","TooltipCustom","Tooltip","title","style","fontSize","placement","IconButton","DropdownMenu","menuLists","menu","handleMenuClose","Menu","anchorEl","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","menuList","MenuItem","SearchBar","placeholder","setSearch","search","showArrowIcon","setShowArrowIcon","value","onChange","e","target","type","required","onFocus","onBlur","NewChat","user","roomName","setRoomName","setOpen","handleNewChatClose","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","DialogActions","preventDefault","add","roomOwner","uid","createdBy","displayName","timestamp","FieldValue","serverTimestamp","then","docRef","set","merge","console","disabled","Sidebar","rooms","setIsRoomExist","isRoomExist","history","useHistory","useAuthState","roomId","useParams","menuSidebar","setMenuSidebar","loading","setLoading","noRooms","setNoRooms","isSearchFound","setIsSetSearchFound","findRoom","myRooms","x","toLowerCase","includes","result","filter","room","log","props","children","length","index","findIndex","push","handleMenuOpen","event","currentTarget","Math","random","signOut","photoURL","CircularProgress","ChatLandingScreen","showLandingScreenPhoto","Zoom","in","transitionDelay","whatsAppConnected","alt","Divider","ChatHeader","chatName","chatsId","msgs","_chatId","menuChat","setMenuChat","showDate","setShowDate","isLastMessage","setIsLastMessage","menuChatLists","delete","Hidden","only","Date","toDate","toLocaleTimeString","weekday","year","month","day","hour","hour12","minute","getDateFromMessage","Chat","messagesEndRef","useRef","input","setInput","emoji","setEmoji","setChatName","_setChatId","setMsgs","setShowLandingScreenPhoto","msg","ref","Drawer","App","setRooms","unsubscribe","onAuthStateChanged","authUser","isAnonymous","anonymousName","floor","currentUser","updateProfile","about","role","dateJoined","get","exists","exact","path","isRoomexist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc6681a0.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  navColor: {\r\n    backgroundColor: \"#128C7E\",\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  a: {\r\n    textDecoration: null,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n","import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyC0_k9_SKEYPwBnc6HOxyOhHJOB-0BggHg\",\n  authDomain: \"chatapp-7b26c.firebaseapp.com\",\n  projectId: \"chatapp-7b26c\",\n  storageBucket: \"chatapp-7b26c.appspot.com\",\n  messagingSenderId: \"578435569576\",\n  appId: \"1:578435569576:web:917c5038b307df95412f9d\",\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport useStyles from \"./styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { WhatsApp } from \"@material-ui/icons\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport { auth } from \"../../services/firebase\";\r\nimport { FirebaseAuth } from \"react-firebaseui\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default function Album() {\r\n  const loginAnonymously = () => {\r\n    const anonymous = \"anonymous\";\r\n    auth.signInAnonymously().catch((error) => alert(`${error}`));\r\n  };\r\n  const uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false,\r\n    },\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"relative\" className={classes.navColor}>\r\n          <Toolbar>\r\n            <WhatsApp className={classes.icon} />\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Chat Application\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main>\r\n          {/* Hero unit */}\r\n          <div className={classes.heroContent}>\r\n            <Container maxWidth=\"sm\">\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h2\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Chat Application\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textSecondary\"\r\n                paragraph\r\n              >\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry\r\n              </Typography>\r\n              <div className={classes.heroButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"primary\" href=\"/signup\">\r\n                      Signup\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"outlined\" color=\"secondary\" href=\"/login\">\r\n                      Login\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" onClick={loginAnonymously}>\r\n                    <PermIdentityIcon />\r\n                    Continue Anonymously\r\n                  </Button>\r\n                </Grid>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n        </main>\r\n        {/* Footer */}\r\n        <footer className={classes.footer}>\r\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n            Footer\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            Something here to give the footer a purpose!\r\n          </Typography>\r\n        </footer>\r\n        {/* End footer */}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./SidebarChat.css\";\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport { Link } from \"react-router-dom\";\nimport db from \"../../../services/firebase\";\n\nfunction SidebarChat({ id, name }) {\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (id) {\n      db.collection(\"chats\")\n        .doc(id)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n  }, [id]);\n\n  return (\n    <Link to={`/chats/${id}`}>\n      <div className=\"sidebarChat\">\n        <Avatar src={`https://avatars.dicebear.com/api/avataaars/${id}.svg`} />\n        <div className=\"sidebarChat_info\">\n          <h2>{name}</h2>\n          {messages[0]?.photo ? (\n            <div>\n              <PhotoCameraIcon />\n            </div>\n          ) : null}\n          <p>{messages[0]?.message}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default SidebarChat;\n","import React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nfunction TooltipCustom({ name, icon, onClick }) {\n  return (\n    <div>\n      <Tooltip\n        title={\n          <span style={{ fontSize: \"14px\", padding: \"8px 5px 8px 5px\" }}>\n            {name}\n          </span>\n        }\n        placement=\"bottom-end\"\n      >\n        <IconButton onClick={onClick}>{icon}</IconButton>\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default TooltipCustom;\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nfunction DropdownMenu({ menuLists, menu, handleMenuClose }) {\n  return (\n    <div>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={menu}\n        keepMounted\n        open={Boolean(menu)}\n        onClose={handleMenuClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        getContentAnchorEl={null}\n      >\n        {menuLists.map((menuList) => (\n          <MenuItem key={menuList.id} onClick={menuList.onClick}>\n            {menuList.title}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nexport default DropdownMenu;\n","import React, { useState } from 'react';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport './SearchBar.css';\n\nfunction SearchBar( { placeholder, setSearch, search } ) {\n    const [showArrowIcon, setShowArrowIcon] = useState(false);\n\n    const displaySearchIcon = () => {\n        setShowArrowIcon(false);\n    }\n    \n    const displayArrowIcon = () => {\n        setShowArrowIcon(true);\n    }\n\n    return (\n        <div className={`search ${showArrowIcon===true && \"search__bgColorChange\"}`}>\n            <div className=\"search__container\">\n                <span className={`${showArrowIcon===true?\"arroww\":''}`}>{showArrowIcon? <ArrowForwardIcon />:<SearchOutlinedIcon/>}</span>\n                <input \n                    value={search} \n                    onChange={e => setSearch(e.target.value)} \n                    type=\"text\" \n                    placeholder={placeholder} \n                    required\n                    onFocus={displayArrowIcon}\n                    onBlur={displaySearchIcon}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar","import React, { useState } from \"react\";\nimport TooltipCustom from \"../TooltipCustom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nfunction NewChat({ user, db, firebase }) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleNewChatOpen = () => {\n    setOpen(true);\n  };\n\n  const handleNewChatClose = () => {\n    setOpen(false);\n    setRoomName(\"\");\n  };\n\n  const createChat = (e) => {\n    e.preventDefault();\n\n    if (roomName) {\n      db.collection(\"chats\")\n        .add({\n          roomOwner: user.uid,\n          createdBy: user.displayName,\n          name: roomName,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        .then(function (docRef) {\n          db.collection(\"chats\").doc(docRef.id).set(\n            {\n              id: docRef.id,\n            },\n            { merge: true }\n          );\n        })\n        .catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n    }\n    setOpen(false);\n    setRoomName(\"\");\n  };\n\n  return (\n    <div>\n      <TooltipCustom\n        name=\"New Chat\"\n        onClick={() => handleNewChatOpen()}\n        icon={<ChatIcon />}\n      />\n\n      <Dialog\n        open={open}\n        onClose={handleNewChatClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Chat Room</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Room Name\"\n            type=\"text\"\n            fullWidth\n            value={roomName}\n            onChange={(e) => setRoomName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleNewChatClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={createChat} color=\"primary\" disabled={!roomName}>\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default NewChat;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SidebarChat from \"./SidebarChat/SidebarChat\";\n\nimport db, { auth } from \"../../services/firebase\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport TooltipCustom from \"../TooltipCustom\";\nimport DropdownMenu from \"../DropdownMenu\";\nimport SearchBar from \"./SearchBar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport NewChat from \"./NewChat\";\n\nfunction Sidebar({ rooms, setIsRoomExist, isRoomExist }) {\n  const history = useHistory();\n  const [user] = useAuthState(auth);\n  const { roomId } = useParams();\n  const [menuSidebar, setMenuSidebar] = useState(null);\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [noRooms, setNoRooms] = useState(false);\n  const [isSearchFound, setIsSetSearchFound] = useState(false);\n\n  const findRoom = function (myRooms) {\n    return function (x) {\n      var searchRoom = x.data.name + \"\";\n      return (\n        searchRoom.toLowerCase().includes(myRooms.toLowerCase()) || !myRooms\n      );\n    };\n  };\n\n  useEffect(() => {\n    const roomResult = () => {\n      return (\n        <>\n          {rooms.filter(findRoom(search)).map((room) => (\n            <p key={room.id}>{room.name}</p>\n          ))}\n        </>\n      );\n    };\n\n    if (search) {\n      var result = roomResult();\n      console.log(\"result\", result);\n      if (result.props.children.length > 0) {\n        setIsSetSearchFound(true);\n      } else {\n        setIsSetSearchFound(false);\n      }\n    }\n\n    var roomList = rooms;\n    if (roomList) {\n      //checks if the current route(roomId) exists in roomList(array)\n      const index = roomList.findIndex(function (id, index) {\n        return id.id === roomId;\n      });\n\n      if (index >= 0) {\n        setIsRoomExist(index);\n        // console.log(\"ROOM EXISTS\");\n      } else if (index === -1) {\n        setIsRoomExist(index);\n        history.push(\"/\");\n        // console.log(\"ROOM DOES NOT EXIST\");\n      }\n    }\n  }, [search, rooms, roomId, history, setIsRoomExist]);\n\n  useEffect(() => {\n    if (rooms) {\n      if (rooms.length > 0) {\n        setNoRooms(false);\n        setLoading(true);\n      } else if (rooms.length === 0 && isRoomExist === -1) {\n        setNoRooms(true);\n        setLoading(true);\n      }\n    }\n  }, [rooms]);\n\n  const handleDrawerLeftOpen = () => {\n    setMenuSidebar(null);\n  };\n\n  const handleMenuOpen = (event) => {\n    setMenuSidebar(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setMenuSidebar(null);\n  };\n  const archive = () => {\n    alert(\"Archive is not yet available!\");\n  };\n\n  const starred = () => {\n    alert(\"Starred is not yet available!\");\n  };\n\n  const settings = () => {\n    alert(\"Settings is not yet available!\");\n  };\n\n  const logout = () => {\n    auth.signOut();\n    history.push(\"/\");\n  };\n  const menuLists = [\n    {\n      title: \"Profile\",\n      onClick: () => handleDrawerLeftOpen(),\n      id: Math.random() * 100000,\n    },\n    {\n      title: \"Archived\",\n      onClick: () => archive(),\n      id: Math.random() * 100000,\n    },\n    {\n      title: \"Starred\",\n      onClick: () => starred(),\n      id: Math.random() * 100000,\n    },\n    {\n      title: \"Settings\",\n      onClick: () => settings(),\n      id: Math.random() * 100000,\n    },\n    {\n      title: \"Logout\",\n      onClick: () => logout(),\n      id: Math.random() * 100000,\n    },\n  ];\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        <div className=\"sidebar_header\">\n          <Avatar src={user?.photoURL} />\n          <div className=\"sidebar_headerRight\">\n            <IconButton>\n              <DonutLargeIcon />\n            </IconButton>\n            <NewChat db={db} user={user} firebase={firebase} />\n\n            <TooltipCustom\n              name=\"Menu\"\n              icon={<MoreVertIcon />}\n              onClick={handleMenuOpen}\n            />\n            <DropdownMenu\n              menuLists={menuLists}\n              menu={menuSidebar}\n              handleMenuOpen={handleMenuOpen}\n              handleMenuClose={handleMenuClose}\n            />\n          </div>\n        </div>\n        <SearchBar\n          search={search}\n          setSearch={setSearch}\n          placeholder=\"Search or start new chat\"\n        />\n        <div className=\"sidebar_chats\">\n          {loading ? (\n            <>\n              {search ? (\n                <>\n                  {isSearchFound ? (\n                    <div>\n                      {rooms.filter(findRoom(search)).map((room) => (\n                        <SidebarChat\n                          key={room.id}\n                          id={room.id}\n                          name={room.data.name}\n                        />\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"sidebar_chatsContainer_empty\">\n                      <span>No chat room found</span>\n                    </div>\n                  )}\n                </>\n              ) : (\n                <>\n                  {rooms.map((room) => (\n                    <SidebarChat\n                      key={room.id}\n                      id={room.id}\n                      name={room.data.name}\n                    />\n                  ))}\n                </>\n              )}\n            </>\n          ) : (\n            <div className=\"sidebar_chatsContainer_loading\">\n              <div>\n                <CircularProgress />\n              </div>\n            </div>\n          )}\n\n          {noRooms && loading ? (\n            <div className=\"sidebar_chatsContainer_empty\">\n              <span>No rooms</span>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/whatsapp-connect.cc17ccc4.jpg\";","import React from \"react\";\nimport LaptopIcon from \"@material-ui/icons/Laptop\";\nimport Divider from \"@material-ui/core/Divider\";\nimport whatsAppConnected from \"../../images/whatsapp-connect.jpg\";\nimport \"./ChatLandingScreen.css\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction ChatLandingScreen({ showLandingScreenPhoto }) {\n  return (\n    <div className=\"chat-landing-screen\">\n      <div>\n        <Zoom\n          in={showLandingScreenPhoto}\n          style={{ transitionDelay: showLandingScreenPhoto ? \"300ms\" : \"0ms\" }}\n        >\n          <img\n            className=\"chat-landing-screen__photo\"\n            src={whatsAppConnected}\n            alt=\"whatsAppConnected\"\n          />\n        </Zoom>\n      </div>\n\n      <div className=\"chat-landing-screen__title\">\n        <p>Keep your phone connected</p>\n      </div>\n\n      <div>\n        <p>\n          WhatsApp connects to your phone to sync messages. To reduce data\n          usage, connect to yor phone to Wi-Fi.\n        </p>\n      </div>\n\n      <Divider />\n\n      <div className=\"chat-landing-screen__footer\">\n        <LaptopIcon />\n        <p>WhatsApp is available for Windows.</p>\n        {/* <a\n          target=\"_blank\"\n          href=\"https://www.whatsapp.com/download\"\n          rel=\"noopener noreferrer\"\n        >\n          Get it here.\n        </a> */}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatLandingScreen;\n","import React, { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../services/firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport \"./ChatHeader.css\";\r\nimport TooltipCustom from \"../TooltipCustom\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Avatar, Hidden } from \"@material-ui/core\";\r\nimport DropdownMenu from \"../DropdownMenu\";\r\n\r\nfunction ChatHeader({ chatName, chatsId, _chatId, msgs, db, isRoomExist }) {\r\n  const [user] = useAuthState(auth);\r\n  const [menuChat, setMenuChat] = useState(null);\r\n  const [showDate, setShowDate] = useState(false);\r\n  const [isLastMessage, setIsLastMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const errorAbout = \"errorAbout\";\r\n\r\n    if (msgs[msgs.length - 1]?.timestamp) {\r\n      setShowDate(true);\r\n    } else {\r\n      setShowDate(false);\r\n    }\r\n\r\n    if (msgs[msgs.length - 1]) {\r\n      setIsLastMessage(true);\r\n    } else {\r\n      setIsLastMessage(false);\r\n    }\r\n  }, [msgs, chatsId]);\r\n\r\n  // console.log(\"ROOOM ID\", chatsId);\r\n  // console.log(\"__ROOOM ID\", _chatId);\r\n\r\n  const getDateFromMessage = () => {\r\n    return new Date(\r\n      msgs[msgs.length - 1]?.timestamp?.toDate()\r\n    ).toLocaleTimeString([], {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      hour12: true,\r\n      minute: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const getDateLocal = () => {\r\n    return new Date().toLocaleTimeString([], {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      hour12: true,\r\n      minute: \"numeric\",\r\n    });\r\n  };\r\n  const searchMessage = () => {\r\n    // setDrawerRightSearch(true);\r\n    alert(\"search\");\r\n  };\r\n\r\n  const contactInfo = () => {\r\n    // setDrawerRightInfo(true);\r\n    setMenuChat(null);\r\n  };\r\n\r\n  const selectMessages = () => {\r\n    const selectMessages = \"selectMessages\";\r\n    alert(\"Select Messages is not yet  available!\");\r\n  };\r\n\r\n  const muteNotifications = () => {\r\n    const muteNotifications = \"muteNotifications\";\r\n    alert(\"Mute Notifications is not yet available!\");\r\n  };\r\n\r\n  const clearMessages = () => {\r\n    const clearMessages = \"clearMessages\";\r\n    alert(\"Clear Messages is not yet available!\");\r\n  };\r\n\r\n  const deleteRoom = () => {\r\n    const roomDeleted = \"roomDeleted\";\r\n    db.collection(\"chats\")\r\n      .doc(chatsId)\r\n      .delete()\r\n      .then(function () {\r\n        alert(\"Room successfully deleted!\");\r\n      })\r\n      .catch(function (error) {\r\n        alert(`Error removing room! ${error}`);\r\n      });\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuChat(null);\r\n  };\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setMenuChat(event.currentTarget);\r\n  };\r\n\r\n  const menuChatLists = [\r\n    {\r\n      title: \"Contact info\",\r\n      onClick: () => contactInfo(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Select messages\",\r\n      onClick: () => selectMessages(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Mute notifications\",\r\n      onClick: () => muteNotifications(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Clear messages\",\r\n      onClick: () => clearMessages(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Delete Room\",\r\n      onClick: () => deleteRoom(),\r\n      id: Math.random() * 100000,\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"chat_header\">\r\n      <Avatar\r\n        src={`https://avatars.dicebear.com/api/avataaars/${chatsId}.svg`}\r\n      />\r\n      <div className=\"chat_headerInfo\">\r\n        <h3>{chatName}</h3>\r\n\r\n        <Hidden only={[\"xs\"]}>\r\n          {isLastMessage ? (\r\n            <>\r\n              {showDate ? (\r\n                <p>Last seen {getDateFromMessage()}</p>\r\n              ) : (\r\n                <p>Last seen {getDateLocal()}</p>\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </Hidden>\r\n      </div>\r\n      <div className=\"chat_headerRight\">\r\n        <TooltipCustom\r\n          name=\"Search\"\r\n          icon={<SearchOutlinedIcon />}\r\n          onClick={searchMessage}\r\n        />\r\n        <TooltipCustom\r\n          name=\"Menu\"\r\n          icon={<MoreVertIcon />}\r\n          onClick={handleMenuOpen}\r\n        />\r\n        <DropdownMenu\r\n          menuLists={menuChatLists}\r\n          menu={menuChat}\r\n          handleMenuOpen={handleMenuOpen}\r\n          handleMenuClose={handleMenuClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n","import React, { useEffect, useState, useRef } from \"react\";\nimport \"./Chat.css\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\n\nimport { useParams } from \"react-router\";\nimport db, { auth } from \"../../services/firebase\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport ChatLandingScreen from \"./ChatLandingScreen\";\nimport ChatHeader from \"./ChatHeader\";\nimport { Drawer, Hidden } from \"@material-ui/core\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TooltipCustom from \"../TooltipCustom\";\n// import \"emoji-mart/css/emoji-mart.css\";\n// import { Picker } from \"emoji-mart\";\n\nfunction Chat({ isRoomExist }) {\n  const messagesEndRef = useRef(null);\n  const [input, setInput] = useState(\"\");\n  const { chatsId } = useParams();\n\n  const [user] = useAuthState(auth);\n  const [emoji, setEmoji] = useState(false);\n  const [chatName, setChatName] = useState(\"\");\n  const [_chatId, _setChatId] = useState(\"\");\n  const [msgs, setMsgs] = useState([]);\n  const [showLandingScreenPhoto, setShowLandingScreenPhoto] = useState(false);\n\n  const attachFile = () => {\n    alert(\n      \"All icons have the same functions, you can only upload images, gifs and videos!\"\n    );\n  };\n  useEffect(() => {\n    if (chatsId != null) {\n      db.collection(\"chats\")\n        .doc(chatsId)\n        .onSnapshot(function (doc) {\n          setChatName(doc.data()?.name);\n          _setChatId(doc.data()?.id);\n        });\n      db.collection(\"chats\")\n        .doc(chatsId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) =>\n          setMsgs(snapshot.docs.map((doc) => doc.data()))\n        );\n      setShowLandingScreenPhoto(false);\n    } else {\n      setShowLandingScreenPhoto(true);\n    }\n  }, [chatsId]);\n\n  const sendMsg = (e) => {\n    e.preventDefault();\n    console.log(\"You typed>>>>\", input);\n    db.collection(\"chats\")\n      .doc(chatsId)\n      .collection(\"messages\")\n      .add({\n        message: input,\n        name: user.displayName,\n        uid: user.uid,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n      .then(function (docRef) {\n        db.collection(\"chats\")\n          .doc(chatsId)\n          .collection(\"messages\")\n          .doc(docRef.id)\n          .set(\n            {\n              id: docRef.id,\n            },\n            { merge: true }\n          );\n      })\n      .catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n    setInput(\"\");\n  };\n\n  const addEmoji = (e) => {\n    let emoji = e.native;\n    setInput(input + emoji);\n  };\n\n  const handleEmoticons = () => {\n    setEmoji(true);\n  };\n\n  const handleEmoticonsClose = () => {\n    setEmoji(false);\n  };\n\n  const voiceMessage = () => {\n    const voiceMessageToastId = \"voiceMessage\";\n    alert(\n      \"Voice Message is not yet available!\",\n      voiceMessageToastId,\n      \"top-center\"\n    );\n  };\n\n  return (\n    <div className=\"chat\">\n      {chatsId ? (\n        <>\n          <ChatHeader\n            chatName={chatName}\n            chatsId={chatsId}\n            _chatId={_chatId}\n            msgs={msgs}\n            db={db}\n            isRoomExist={isRoomExist}\n          />\n          <div className=\"chat_body\">\n            {msgs.map((msg) => (\n              <div\n                key={msg.id}\n                className={`chat_message ${\n                  msg.name === user.displayName && \"chat_reciever\"\n                }`}\n              >\n                <span\n                  className={`chat_name ${\n                    msg.uid === user.uid && \"chat_name_sender\"\n                  }`}\n                >\n                  {msg.name}\n                </span>\n                <div className=\"chat_message_box\">\n                  <div\n                    className={`chat_msg_box_text ${\n                      msg.uid === user.uid && \"chat__message_box_text_sender\"\n                    }`}\n                  >\n                    {msg.message ? msg.message : null}\n                    <div\n                      className={`chat_timestamp_container ${\n                        msg.uid === user.uid &&\n                        \"chat_timestamp_container_sender\"\n                      }`}\n                    >\n                      {msg.timestamp ? (\n                        <div className={`chat_timestamp `}>\n                          <span>\n                            {new Date(\n                              msg.timestamp.toDate()\n                            ).toLocaleTimeString(\"en-US\", {\n                              hour: \"numeric\",\n                              hour12: true,\n                              minute: \"numeric\",\n                            })}\n                            {msg.uid === user.uid ? (\n                              <DoneIcon fontSize=\"small\" />\n                            ) : null}\n                          </span>\n                        </div>\n                      ) : (\n                        <div className=\"chat_timestamp\">\n                          <span>\n                            {new Date().toLocaleTimeString(\"en-US\", {\n                              hour: \"numeric\",\n                              hour12: true,\n                              minute: \"numeric\",\n                            })}\n                            {msg.uid === user.uid ? (\n                              <AlarmIcon fontSize=\"small\" />\n                            ) : null}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n\n          <div className=\"chat_footer\">\n            <Drawer />\n            {emoji ? (\n              <Hidden only={[\"xs\"]}>\n                <TooltipCustom\n                  name=\"Close\"\n                  icon={<CloseIcon />}\n                  onClick={() => handleEmoticonsClose()}\n                />\n              </Hidden>\n            ) : null}\n            <TooltipCustom\n              name=\"Emoticons\"\n              icon={<InsertEmoticonIcon />}\n              onClick={() => handleEmoticons()}\n            />\n\n            {/* {emoji ? (\n              <>\n                <Hidden only={[\"xs\"]}>\n                  <Picker onSelect={addEmoji} />\n                </Hidden>\n                <Hidden smUp>\n                  <ClickAwayListener onClickAway={handleEmoticonsClose}>\n                    <Picker onSelect={addEmoji} />\n                  </ClickAwayListener>\n                </Hidden>\n              </>\n            ) : null} */}\n\n            <TooltipCustom\n              name=\"Attach\"\n              icon={<AttachFileIcon />}\n              onClick={attachFile}\n            />\n            <form>\n              <input\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message\"\n                type=\"text\"\n              ></input>\n              <button onClick={sendMsg} type=\"submit\">\n                Send a message\n              </button>\n            </form>\n            <TooltipCustom\n              name=\"Voice Message\"\n              icon={<MicIcon />}\n              onClick={() => voiceMessage()}\n            />\n          </div>\n        </>\n      ) : (\n        <ChatLandingScreen showLandingScreenPhoto={showLandingScreenPhoto} />\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n","/* eslint-disable no-const-assign */\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Chat from \"./components/Chat/Chat\";\n\nimport db, { auth } from \"./services/firebase\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  const [rooms, setRooms] = useState([]);\n  const [isRoomExist, setIsRoomExist] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setLoading(true);\n\n        db.collection(\"chats\")\n          .orderBy(\"timestamp\", \"desc\")\n          .onSnapshot((snapshot) =>\n            setRooms(\n              snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n              }))\n            )\n          );\n\n        if (authUser.isAnonymous === true && authUser.displayName === null) {\n          var anonymousName =\n            \"Anonymous\" + \" \" + Math.floor(Math.random() * 1000000);\n\n          auth.currentUser.updateProfile({\n            displayName: anonymousName,\n            photoURL: \"\",\n          });\n\n          db.collection(\"users\")\n            .doc(authUser.uid)\n            .set({\n              name: anonymousName,\n              about: \"Hey there! I am using WhatsApp.\",\n              photoURL: \"\",\n              role: \"anonymous\",\n              dateJoined: firebase.firestore.FieldValue.serverTimestamp(),\n            })\n            .then(function () {\n              console.log(\"Document successfully updated!\");\n            })\n            .catch(function (error) {\n              console.error(\"Error updating document: \", error);\n            });\n        }\n\n        if (\n          authUser.uid &&\n          authUser.isAnonymous === false &&\n          authUser.photoURL !== null\n        ) {\n          const errorAbout = \"errorAbout\";\n          db.collection(\"users\")\n            .doc(authUser.uid)\n            .get()\n            .then(function (doc) {\n              if (doc.exists) {\n                console.log(\"USER EXIST\");\n              } else {\n                db.collection(\"users\").doc(authUser.uid).set({\n                  name: authUser.displayName,\n                  about: \"Hey there! I am using WhatsApp.\",\n                  photoURL: user.photoURL,\n                  role: \"regular\",\n                  dateJoined: firebase.firestore.FieldValue.serverTimestamp(),\n                });\n              }\n            })\n            .catch(function (error) {\n              alert(`${error}`, errorAbout, \"top-center\");\n            });\n        } else if (\n          authUser.uid &&\n          authUser.isAnonymous === false &&\n          authUser.photoURL === null\n        ) {\n          const errorAbout = \"errorAbout\";\n          db.collection(\"users\")\n            .doc(authUser.uid)\n            .get()\n            .then(function (doc) {\n              if (doc.exists) {\n                console.log(\"USER EXIST\");\n              } else {\n                db.collection(\"users\").doc(authUser.uid).set({\n                  name: authUser.displayName,\n                  about: \"Hey there! I am using WhatsApp.\",\n                  photoURL: \"\",\n                  role: \"regular\",\n                  dateJoined: firebase.firestore.FieldValue.serverTimestamp(),\n                });\n              }\n            })\n            .catch(function (error) {\n              alert(`${error}`, errorAbout, \"top-center\");\n            });\n        }\n      } else {\n        setLoading(true);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user]);\n\n  return (\n    <>\n      {!user ? (\n        <Home />\n      ) : (\n        <div className=\"app\">\n          <div className=\"app_body\">\n            <Sidebar\n              rooms={rooms}\n              setIsRoomExist={setIsRoomExist}\n              isRoomExist={isRoomExist}\n            />\n            <Switch>\n              <Route exact path=\"/chats/:chatsId\">\n                <Chat isRoomexist={isRoomExist} />\n              </Route>\n              <Route exact path=\"/\">\n                <Chat isRoomexist={isRoomExist} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />,\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}